{"version":3,"sources":["components/Quotes.js","App.js","reportWebVitals.js","index.js"],"names":["Quotes","useState","quote","setQuote","author","setAuthor","useEffect","getQuote","fetch","then","res","json","data","dataQuotes","quotes","randomQuote","Math","floor","random","length","id","className","href","onClick","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iNA6CeA,EA3CA,WACX,MAAsBC,mBAAS,IAA/B,mBAAMC,EAAN,KAAYC,EAAZ,KACA,EAAwBF,mBAAS,IAAjC,mBAAMG,EAAN,KAAaC,EAAb,KAEAC,qBAAU,WACVC,MACG,IAEH,IAAMA,EAAS,WAEXC,MADQ,0IAEXC,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAAAG,GACF,IAAIC,EAAWD,EAAKE,OAEhBC,EAAYF,EADFG,KAAKC,MAAMD,KAAKE,SAASL,EAAWM,SAElDhB,EAASY,EAAYb,OACrBG,EAAUU,EAAYX,YAO1B,OACD,sBAAKgB,GAAG,YAAR,UACI,qBAAKA,GAAG,OAAR,SACI,4BAAIlB,MAER,qBAAKkB,GAAG,SAAR,SACI,4BAAIhB,MAER,sBAAKgB,GAAG,UAAR,UACI,qBAAKC,UAAU,cAAf,SACI,mBAAGC,KAAK,2BAA2BF,GAAG,cAAtC,uBAEP,wBAAQA,GAAG,YAAYG,QAhBP,WAChBhB,KAeA,8B,MC1BOiB,MARf,WACA,OACE,qBAAKH,UAAU,MAAf,SACE,cAAC,EAAD,OCKWI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlB,MAAK,YAAkD,IAA/CmB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.f5851f63.chunk.js","sourcesContent":["import React,{useState,useEffect} from 'react';\r\n\r\nconst Quotes = () => {\r\n    const[quote,setQuote]=useState(\"\");\r\n    const[author,setAuthor]=useState(\"\");\r\n\r\n    useEffect(() => {\r\n    getQuote()\r\n    }, [])\r\n    \r\n    const getQuote=()=>{\r\n        let url=\"https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json\"\r\n        fetch(url)\r\n    .then(res=>res.json())\r\n    .then(data=> {\r\n        let dataQuotes=data.quotes;\r\n        let randomNum=Math.floor(Math.random()*dataQuotes.length);\r\n        let randomQuote=dataQuotes[randomNum]\r\n        setQuote(randomQuote.quote);\r\n        setAuthor(randomQuote.author)\r\n    })\r\n    }\r\n    const handleClick = () => {\r\n        getQuote();\r\n    }\r\n\r\n    return (\r\n   <div id=\"quote-box\">\r\n       <div id=\"text\">\r\n           <p>{quote}</p>\r\n           </div>\r\n       <div id=\"author\">\r\n           <p>{author}</p>\r\n       </div>\r\n       <div id=\"buttons\">\r\n           <div className=\"socialmedia\">\r\n               <a href=\"twitter.com/intent/tweet\" id=\"tweet-quote\">Twitter</a>\r\n           </div>\r\n        <button id=\"new-quote\" onClick={handleClick}>New quote</button>   \r\n       </div>\r\n       \r\n   </div>\r\n    )\r\n}\r\n\r\nexport default Quotes;","import React from'react';\nimport Quotes from \"./components/Quotes\"\nimport './App.css';\n\nfunction App() {\nreturn(\n  <div className=\"App\">\n    <Quotes/>\n  </div>\n)\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}